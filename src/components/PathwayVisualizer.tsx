"use client"

import React from 'react';
import { ArrowRight, Book, Code, Users, Wrench, Brain } from 'lucide-react';
interface PathwayNode {
  id: string;
  title: string;
  description: string;
  icon: React.ReactNode;
  children?: PathwayNode[];
}

const PathwayVisualizer = ({ query }: { query: string }) => {
  // This would be generated by Claude API in production
  const pathways: PathwayNode[] = [
    {
      id: "learn",
      title: "Learn Unreal Engine",
      description: "Master the basics of UE5",
      icon: <Book className="w-6 h-6" />,
      children: [
        {
          id: "basics",
          title: "Core Concepts",
          description: "Understanding UE5 interface",
          icon: <Brain className="w-6 h-6" />
        },
        {
          id: "blueprint",
          title: "Blueprint System",
          description: "Visual scripting basics",
          icon: <Code className="w-6 h-6" />
        }
      ]
    },
    {
        id: "plan",
        title: "Plan Your Game",
        description: "Define scope and features",
        icon: <Wrench className="w-6 h-6" />,  // Changed from Tool to Wrench
        children: [
          {
            id: "design",
            title: "Game Design Doc",
            description: "Create project blueprint",
            icon: <Book className="w-6 h-6" />
          }
        ]
      },
    {
      id: "community",
      title: "Join Communities",
      description: "Connect with UE developers",
      icon: <Users className="w-6 h-6" />
    }
  ];

  return (
    <div className="relative w-full min-h-[500px] p-8">
      {/* Portal effect background */}
      <div className="absolute inset-0 bg-gradient-to-r from-purple-900/20 to-blue-900/20 
                      rounded-3xl animate-[portalOpen_1s_ease-out_forwards]" />
      
      {/* Nodes */}
      <div className="relative grid grid-cols-3 gap-8">
        {pathways.map((pathway, index) => (
          <div key={pathway.id} className="space-y-4">
            <div 
              className="bg-black/50 p-6 rounded-xl border border-purple-500/30
                         hover:border-purple-500/60 transition-all cursor-pointer
                         animate-[nodePulse_3s_ease-in-out_infinite]
                         backdrop-blur-sm"
              style={{ animationDelay: `${index * 0.2}s` }}
            >
              <div className="flex items-center gap-3 mb-2">
                {pathway.icon}
                <h3 className="text-lg font-bold text-purple-200">{pathway.title}</h3>
              </div>
              <p className="text-sm text-purple-200/70">{pathway.description}</p>
              
              {/* Sub-nodes */}
              {pathway.children && (
                <div className="mt-4 space-y-3">
                  {pathway.children.map(child => (
                    <div 
                      key={child.id}
                      className="bg-black/30 p-4 rounded-lg border border-purple-500/20
                                hover:border-purple-500/40 transition-all cursor-pointer"
                    >
                      <div className="flex items-center gap-2">
                        {child.icon}
                        <div>
                          <h4 className="text-sm font-semibold text-purple-200">{child.title}</h4>
                          <p className="text-xs text-purple-200/70">{child.description}</p>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default PathwayVisualizer; 